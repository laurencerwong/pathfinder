//
//  DirectAttack.m
//  cocos2d-normal
//
//  Created by Keith DeRuiter on 12/3/13.
//  Copyright (c) 2013 Instructor. All rights reserved.
//

#import "DirectAttack.h"
#import "Simulator.h"
#import "TargetCandidate.h"

@implementation DirectAttack


-(int) computeUtilityAndInitialize
{
    if(myCharacter.currentTarget == nil) {
        myCharacter.currentTarget = [self pickTarget];
    }
    
    CharacterObject *target = myCharacter.currentTarget;
    
    int targetRemainingHealth = target.currentHealth - ([myCharacter getTotalAttack] - [target getTotalDefense]);
    
    self.destination = myCharacter.currentTarget.position;
    self.desiredAction = [Action actionWithType:CombatMoveAction];
    
    return targetRemainingHealth;
}

-(CharacterObject *) pickTarget
{
    NSArray *humanUnits = [[Simulator sharedSimulator] getUnitsForPlayer:0]; //Human
    
    NSMutableArray *targetCandidates;
    
    //Pick people in range that aren't immune to my damage
    for(CharacterObject *c in humanUnits) {
        TargetCandidate *tc = [[TargetCandidate alloc] initForTaget:c FromCharacter:myCharacter];
        if([Behavior isCharacter:tc.character InRangeOfCharacter:myCharacter] && tc.potentialDamage > 0) {
            [targetCandidates addObject:tc];
        }
    }
    
    //pick best candidate by amount of health target will have remaining (try to minimize that value)
    [targetCandidates sortUsingComparator:^NSComparisonResult(id a, id b) {
        TargetCandidate *first = (TargetCandidate*)a;
        TargetCandidate *second = (TargetCandidate*)b;
        
        int firstRemainingHealth = (first.health - first.potentialDamage);
        int secondRemainingHealth = (second.health - second.potentialDamage);
        
        if(firstRemainingHealth < secondRemainingHealth) {
            return NSOrderedAscending;
        } else if(firstRemainingHealth > secondRemainingHealth) {
            return NSOrderedDescending;
        }
        return NSOrderedSame;
    }];
    
    return ((TargetCandidate*)[targetCandidates objectAtIndex:0]).character;
}

@end



